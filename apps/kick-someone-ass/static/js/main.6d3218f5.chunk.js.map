{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["PreparedPage","props","text","pic","react_default","a","createElement","class","type","placeholder","value","onChange","event","onNameChange","target","onClick","onConfirmClick","Ass","index","top","left","id","style","position","onAssKick","GamePage","asses","remainAsses","totalMilliseconds","assesNeedKicked","map","key","className","GameOverModal","modalId","totalTime","tabIndex","role","aria-labelledby","aria-hidden","data-dismiss","aria-label","onYeahClick","require","App","showPage","_useState","useState","_useState2","Object","slicedToArray","name","setName","_useState3","_useState4","_useState5","_useState6","isStart","setIsStart","_useState7","_useState8","isGameOver","setIsGameOver","_useState9","Math","floor","random","_useState10","setAsses","_useState11","_useState12","setRemainAsses","_useState13","_useState14","setTotalMilliseconds","_useState15","Date","now","_useState16","startTime","setStartTime","gameOverModalId","useEffect","callback","delay","savedCallback","useRef","current","setInterval","clearInterval","useInterval","$","concat","modal","targetIndex","targetAss","effectId","newAsses","JSON","parse","stringify","push","addClass","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6d3218f5.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport $ from 'jquery';\nrequire('bootstrap');\n\nfunction PreparedPage(props) {\n  const text = props.text;\n  const pic = props.pic;\n\n  function onNameChange(event) {\n    props.onNameChange(event.target.value);\n  }\n\n  function onConfirmClick() {\n    props.onConfirmClick();\n  }\n\n  return (\n    <div class=\"vw-100 vh-100 d-flex justify-content-center align-items-center\">\n      <div class=\"container-fluid m-3\">\n        <div class=\"row mx-3 my-2 text-center text-danger\">\n          <h1 class=\"w-100\">\n            Kick Its Ass!\n          </h1>\n        </div>\n        <div class=\"row mx-3 my-2\">\n          <div class=\"input-group\">\n            <input type=\"text\" class=\"form-control mx-5 text-center\" placeholder=\"Its name\" value={text} onChange={onNameChange} />\n          </div>\n        </div>\n        <div class=\"row mx-3 my-2\">\n          <button type=\"button\" class=\"btn btn-outline-primary w-100 mx-5\" onClick={onConfirmClick}>Confirm</button>\n        </div>\n\n\n      </div>\n      {/* <p>or</p>\n      <div>\n\n      </div> */}\n\n    </div>\n  )\n}\n\nfunction Ass(props) {\n  const text = props.text;\n  const index = props.index;\n  const top = props.top;\n  const left = props.left;\n\n  function onAssKick() {\n    props.onAssKick(index);\n  }\n\n  return (\n    <div id={top + left} style={{ \"position\": \"absolute\", \"top\": top, \"left\": left }} onClick={onAssKick}>\n      <h5>\n        {text}\n      </h5>\n    </div>\n  )\n}\n\nfunction GamePage(props) {\n  const text = props.text;\n  const pic = props.pic;\n  const asses = props.asses;\n  const remainAsses = props.remainAsses;\n  const totalMilliseconds = props.totalMilliseconds;\n\n  function onAssKick(index) {\n    props.onAssKick(index);\n  }\n\n  const assesNeedKicked = asses.map((a, index) => {\n    return <Ass text={text} index={index} key={a.id} top={a.top} left={a.left} onAssKick={onAssKick} />\n  })\n\n  return (\n    <div class=\"w-100 h-100\">\n      <div class=\"header\">\n        <div class=\"container-fluid py-2\">\n          <div className=\"row\">\n            <div class=\"col-6 text-center text-danger font-weight-bold\">\n              Remain: {remainAsses}\n            </div>\n            <div class=\"col-6 text-center text-info font-weight-bold\">\n              Total Milliseconds: {totalMilliseconds}\n            </div>\n          </div>\n        </div>\n      </div>\n      {assesNeedKicked}\n    </div>\n  )\n}\n\nfunction useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  });\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n\n    let id = setInterval(tick, delay);\n    return () => clearInterval(id);\n  }, [delay]);\n}\n\nfunction GameOverModal(props) {\n  const modalId = props.modalId;\n  const totalTime = props.totalTime;\n\n  function onYeahClick() {\n    props.onYeahClick();\n  }\n\n  return (\n    <div>\n      <div class=\"modal fade\" id={modalId} tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"editingModalLabel\" aria-hidden=\"true\">\n        <div class=\"modal-dialog\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h5 class=\"modal-title\">Kick Finished</h5>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div class=\"modal-body text-center\">\n              <h5>Total Spend Milliseconds</h5>\n              <h1 class=\"text-warning\">{totalTime}</h1>\n              <p>Good Kicked :)</p>\n            </div>\n            <div class=\"modal-footer\">\n              <button type=\"button\" class=\"btn btn-primary\" data-dismiss=\"modal\" onClick={onYeahClick}>Yeah</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nfunction App() {\n  const [name, setName] = useState(\"\");\n  const [pic, setPic] = useState(\"\");\n  const [isStart, setIsStart] = useState(false);\n  const [isGameOver, setIsGameOver] = useState(false);\n  const [asses, setAsses] = useState([{\n    \"top\": Math.floor(Math.random() * 90) + \"vh\",\n    \"left\": Math.floor(Math.random() * 90) + \"vw\",\n    \"id\": Math.random(),\n  }]);\n  const [remainAsses, setRemainAsses] = useState(100);\n  const [totalMilliseconds, setTotalMilliseconds] = useState(0);\n  const [startTime, setStartTime] = useState(Date.now());\n  const gameOverModalId = \"gameOverModalId\";\n\n  useEffect(() => {\n    if (remainAsses === 0) {\n      setIsGameOver(true);\n    }\n  }, [remainAsses]);\n\n  useInterval(() => {\n    if (!isGameOver) {\n      setTotalMilliseconds(Date.now() - startTime);\n    }\n  }, 0);\n\n  function onNameChange(value) {\n    setName(value);\n  }\n\n  function onConfirmClick() {\n    setAsses([{\n      \"top\": Math.floor(Math.random() * 90) + \"vh\",\n      \"left\": Math.floor(Math.random() * 90) + \"vw\",\n      \"id\": Math.random(),\n    }]);\n    setRemainAsses(100);\n    setIsGameOver(false);\n    setIsStart(true);\n    setTotalMilliseconds(0);\n    setStartTime(Date.now());\n  }\n\n  function onYeahClick() {\n    setIsGameOver(false);\n    setIsStart(false);\n  }\n\n  function onAssKick(targetIndex) {\n    const targetAss = asses[targetIndex];\n    var effectId = `${targetAss.top}${targetAss.left}`;\n    var animClass = 'swirl-out-top-bck';\n    const newAsses = JSON.parse(JSON.stringify(asses));\n    newAsses.push({\n      \"top\": Math.floor(Math.random() * 90) + \"vh\",\n      \"left\": Math.floor(Math.random() * 90) + \"vw\",\n      \"id\": Math.random(),\n    });\n    setAsses(newAsses);\n    $(`#${effectId}`).addClass(`${animClass}`);\n    setRemainAsses(remainAsses - 1);\n  }\n\n  function gameOver() {\n    $(`#${gameOverModalId}`).modal('show');\n  }\n\n\n  let showPage;\n  if (isGameOver) {\n    gameOver();\n  } else if (!isStart) {\n    showPage = <PreparedPage\n      text={name}\n      pic={pic}\n      onConfirmClick={onConfirmClick}\n      onNameChange={onNameChange}\n    />\n  } else {\n    showPage = <GamePage\n      text={name}\n      pic={pic}\n      asses={asses}\n      onAssKick={onAssKick}\n      remainAsses={remainAsses}\n      totalMilliseconds={totalMilliseconds}\n    />\n  }\n\n  return (\n    <div class=\"vw-100 vh-100\">\n      {showPage}\n      <GameOverModal\n        modalId={gameOverModalId}\n        totalTime={totalMilliseconds}\n        onYeahClick={onYeahClick}\n      />\n    </div>\n  )\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}